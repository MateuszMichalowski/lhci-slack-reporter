name: 'Lighthouse CI Slack Reporter'
description: 'Run Lighthouse tests on URLs and report results to Slack in tabular format'
author: 'MateuszMichalowski'
branding:
  icon: 'bar-chart-2'
  color: 'blue'

inputs:
  urls:
    description: 'Comma-separated list of URLs to test'
    required: true
  device_types:
    description: 'Device types to test (mobile, desktop, or both). Comma-separated. Defaults to all.'
    required: false
    default: 'mobile,desktop'
  categories:
    description: 'Test categories to run (performance, accessibility, best-practices, seo). Comma-separated. Defaults to all.'
    required: false
    default: 'performance,accessibility,best-practices,seo'
  slack_webhook_url:
    description: 'Slack Webhook URL to send reports to (required if slack_token is not provided)'
    required: false
  slack_channel:
    description: 'Slack channel to send the report to (without #)'
    required: false
  slack_token:
    description: 'Slack API token (required if slack_webhook_url is not provided)'
    required: false
  slack_title:
    description: 'Title for the Slack message'
    required: false
    default: 'Lighthouse Test Results'
  fail_on_score_below:
    description: 'Fail the action if any score is below this threshold (0-100)'
    required: false
    default: '0'
  chrome_flags:
    description: 'Custom Chrome flags for Lighthouse'
    required: false
    default: '--no-sandbox --headless=new --disable-gpu --disable-dev-shm-usage --disable-extensions --no-first-run --disable-background-networking'
  timeout:
    description: 'Timeout for each test in seconds'
    required: false
    default: '60'
  slack_timeout_ms:
    description: 'Timeout for Slack API requests in milliseconds'
    required: false
    default: '10000'
  throttling_method:
    description: 'Throttling method (simulate, devtools, or provided). Use "provided" to disable throttling'
    required: false
    default: 'simulate'
  cpu_slowdown_multiplier:
    description: 'CPU slowdown multiplier for mobile tests (e.g., 2 for 2x slowdown, 1 for no slowdown). Default is 4 for mobile.'
    required: false
    default: ''
  disable_cpu_throttling:
    description: 'Disable CPU throttling entirely (useful for slow CI runners)'
    required: false
    default: 'false'
  locale:
    description: 'Locale for Lighthouse tests (e.g., en-US)'
    required: false
    default: 'en-US'
  runs_per_url:
    description: 'Number of test runs per URL (results will be averaged)'
    required: false
    default: '1'
  lighthouse_config:
    description: 'Path to lighthouserc.json config file'
    required: false

runs:
  using: "composite"
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci
      shell: bash
      working-directory: ${{ github.action_path }}

    - name: Install required tools
      run: |
        npm install -g @vercel/ncc
        npm install -g typescript
      shell: bash

    - name: Build action
      run: npm run build
      shell: bash
      working-directory: ${{ github.action_path }}

    - name: Setup Chrome
      uses: browser-actions/setup-chrome@latest

    - name: Run Lighthouse CI and report to Slack
      run: node ${{ github.action_path }}/dist/index.js
      shell: bash
      env:
        INPUT_URLS: ${{ inputs.urls }}
        INPUT_DEVICE_TYPES: ${{ inputs.device_types }}
        INPUT_CATEGORIES: ${{ inputs.categories }}
        INPUT_SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook_url }}
        INPUT_SLACK_CHANNEL: ${{ inputs.slack_channel }}
        INPUT_SLACK_TOKEN: ${{ inputs.slack_token }}
        INPUT_SLACK_TITLE: ${{ inputs.slack_title }}
        INPUT_FAIL_ON_SCORE_BELOW: ${{ inputs.fail_on_score_below }}
        INPUT_CHROME_FLAGS: ${{ inputs.chrome_flags }}
        INPUT_TIMEOUT: ${{ inputs.timeout }}
        INPUT_SLACK_TIMEOUT_MS: ${{ inputs.slack_timeout_ms }}
        INPUT_THROTTLING_METHOD: ${{ inputs.throttling_method }}
        INPUT_CPU_SLOWDOWN_MULTIPLIER: ${{ inputs.cpu_slowdown_multiplier }}
        INPUT_DISABLE_CPU_THROTTLING: ${{ inputs.disable_cpu_throttling }}
        INPUT_LOCALE: ${{ inputs.locale }}
        INPUT_RUNS_PER_URL: ${{ inputs.runs_per_url }}
        INPUT_LIGHTHOUSE_CONFIG: ${{ inputs.lighthouse_config }}

    - name: Check for Lighthouse reports
      run: |
        echo "Looking for Lighthouse reports..."
        
        echo "Files in the current directory:"
        ls -la
        
        if [ -d "lighthouse-results" ]; then
          find lighthouse-results -type f | grep -v "node_modules" | sort
        else
          echo "lighthouse-results directory doesn't exist in the current location"
        fi
        
        echo "Checking GitHub workspace for reports:"
        if [ -d "$GITHUB_WORKSPACE/lighthouse-results" ]; then
          find $GITHUB_WORKSPACE/lighthouse-results -type f | sort
          echo "Found reports in $GITHUB_WORKSPACE/lighthouse-results"
        else
          echo "No lighthouse-results directory in $GITHUB_WORKSPACE"
        fi
      shell: bash

    - name: Copy reports to accessible location
      run: |
        mkdir -p $GITHUB_WORKSPACE/lhci-reports
        
        if [ -d "lighthouse-results" ]; then
          echo "Copying from ./lighthouse-results"
          cp -r lighthouse-results/* $GITHUB_WORKSPACE/lhci-reports/ 2>/dev/null || true
        fi
        
        if [ -d "$GITHUB_WORKSPACE/lighthouse-results" ]; then
          echo "Copying from $GITHUB_WORKSPACE/lighthouse-results"
          cp -r $GITHUB_WORKSPACE/lighthouse-results/* $GITHUB_WORKSPACE/lhci-reports/ 2>/dev/null || true
        fi
        
        echo "Files copied to lhci-reports:"
        find $GITHUB_WORKSPACE/lhci-reports -type f | sort
      shell: bash

    - name: Upload Lighthouse reports
      uses: actions/upload-artifact@v4
      with:
        name: lighthouse-reports
        path: ${{ github.workspace }}/lhci-reports/
        if-no-files-found: warn
        retention-days: 10
